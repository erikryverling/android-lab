[versions]

# Global
kotlin = "2.0.0"
hilt = "2.51.1"

# Plugins
kotlin-dsl-plugin = "4.3.0"
ksp-plugin = "2.0.0-1.0.21"
android-plugin = "8.3.2"
javapoet = "1.13.0"
kover-plugin = "0.7.6"
protobuf-plugin = "0.9.4"
versions-plugin = "0.51.0"
paparazzi-plugin = "1.3.4"

# Libraries
kotlinx-datetime = "0.6.0"
kotlinx-serialization = "1.6.3"

compose-bom = "2024.05.00"
compose-lifecycle = "2.8.0"
compose-constraintLayout = "1.0.1"
compose-material3 = "1.2.1"
compose-adaptive = "1.0.0-beta01"

protobuf = "4.27.0"
# This needs to be synced with protobuf
protobufCompilerArtifact = "com.google.protobuf:protoc:4.27.0:osx-x86_64"

retrofit = "2.11.0"
retrofit-kotlinx-serialization-converter = "1.0.0"

junit = "5.10.2"
junit4 = "4.13.2"

appCompat = "1.6.1"
navigation = "2.7.7"
hilt-navigation-compose = "1.2.0"
room = "2.6.1"
datastore = "1.1.1"
timber = "5.0.1"
coil = "2.6.0"
work = "2.9.0"
ktor = "2.3.11"
coroutinesTest = "1.8.1"
mockk = "1.13.11"
kotest-assertions = "5.9.0"
turbine = "1.1.0"
androidTestRunner = "1.5.2"
benchmark-macro-junit4 = "1.2.4"
profileinstaller = "1.3.1"
material3WindowSizeClassAndroid = "1.2.1"

[plugins]
versions = { id = "com.github.ben-manes.versions", version.ref = "versions-plugin" }
protobuf = { id = "com.google.protobuf", version.ref = "protobuf-plugin" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
paparazzi = { id = "app.cash.paparazzi", version.ref = "paparazzi-plugin" }
kotlin-dsl = { id = "org.gradle.kotlin.kotlin-dsl", version.ref = "kotlin-dsl-plugin" }

[libraries]
# --- NOTE! These Gradle plugins are used in :buildSrc and thus defined here instead of in [plugins] ---
android-gradlePlugin = { module = "com.android.application:com.android.application.gradle.plugin", version.ref = "android-plugin" }
# Currently needed by the android-gradlePlugin
javapoet = { module = "com.squareup:javapoet", version.ref = "javapoet" }
kotlin-gradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
ksp-gradlePlugin = { module = "com.google.devtools.ksp:com.google.devtools.ksp.gradle.plugin", version.ref = "ksp-plugin" }
hilt-gradlePlugin = { module = "com.google.dagger:hilt-android-gradle-plugin", version.ref = "hilt" }
kover-gradlePlugin = { module = "org.jetbrains.kotlinx.kover:org.jetbrains.kotlinx.kover.gradle.plugin", version.ref = "kover-plugin" }
compose-compiler-gradlePlugin = { module = "org.jetbrains.kotlin.plugin.compose:org.jetbrains.kotlin.plugin.compose.gradle.plugin", version.ref = "kotlin" }
# ---

appCompat = { module = "androidx.appcompat:appcompat", version.ref = "appCompat" }

hilt-android-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt" }
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hilt-navigation = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "hilt-navigation-compose" }

compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "compose-bom" }
compose-material = { module = "androidx.compose.material3:material3", version.ref = "compose-material3" }
compose-material2 = { module = "androidx.compose.material:material" }
compose-tooling = { module = "androidx.compose.ui:ui-tooling" }
compose-activity = { module = "androidx.activity:activity-compose" }
compose-icons = { module = "androidx.compose.material:material-icons-extended" }
compose-lifecycle = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "compose-lifecycle" }
compose-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "compose-lifecycle" }
compose-constraintlayout = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "compose-constraintLayout" }
compose-adaptive = { module = "androidx.compose.material3.adaptive:adaptive", version.ref = "compose-adaptive" }
compose-adaptive-layout = { module = "androidx.compose.material3.adaptive:adaptive-layout", version.ref = "compose-adaptive" }
compose-adaptive-navigation = { module = "androidx.compose.material3.adaptive:adaptive-navigation", version.ref = "compose-adaptive" }

navigation-fragment-ktx = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "navigation" }
navigation-ui-ktx = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "navigation" }
navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "navigation" }

retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-kotlinx-serialization-converter = { module = "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter", version.ref = "retrofit-kotlinx-serialization-converter" }

room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }

datastore = { module = "androidx.datastore:datastore", version.ref = "datastore" }
protobuf = { module = "com.google.protobuf:protobuf-javalite", version.ref = "protobuf" }

kotlinx-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }

timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }

coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coil" }

work = { module = "androidx.work:work-runtime-ktx", version.ref = "work" }

ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

material3-windowSizeClassAndroid = { module = "androidx.compose.material3:material3-window-size-class-android", version.ref = "material3WindowSizeClassAndroid" }

unitTest-junit = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit" }
unitTest-junit4 = { module = "junit:junit", version.ref = "junit4" }
unitTest-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }
unitTest-mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
unitTest-coroutines = { module = " org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutinesTest" }
unitTest-kotest-assertions = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest-assertions" }
unitTest-turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }

androidTest-hilt-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt" }
androidTest-runner = { module = "androidx.test:runner", version.ref = "androidTestRunner" }
androidTest-hilt = { module = "com.google.dagger:hilt-android-testing", version.ref = "hilt" }
androidTest-compose = { module = "androidx.compose.ui:ui-test-junit4" }
androidTest-compose-manifest = { module = "androidx.compose.ui:ui-test-manifest" }
androidTest-work = { module = "androidx.work:work-testing", version.ref = "work" }

benchmark-macro-junit4 = { module = "androidx.benchmark:benchmark-macro-junit4", version.ref = "benchmark-macro-junit4" }
profileinstaller = { module = "androidx.profileinstaller:profileinstaller", version.ref = "profileinstaller" }

[bundles]
compose = [
    "compose-activity",
    "compose-material",
    "compose-material2",
    "compose-tooling",
    "compose-lifecycle",
    "compose-viewmodel",
    "compose-icons",
    "compose-adaptive",
    "compose-adaptive-layout",
    "compose-adaptive-navigation",
]
navigation = [
    "navigation-fragment-ktx",
    "navigation-ui-ktx",
    "navigation-compose",
]
retrofit = [
    "retrofit",
    "retrofit-kotlinx-serialization-converter",
]
ktor = [
    "ktor-client-core",
    "ktor-client-cio",
    "ktor-client-content-negotiation",
    "ktor-serialization-kotlinx-json",
]
unitTest = [
    "unitTest-junit",
    "unitTest-mockk",
    "unitTest-kotest-assertions",
    "unitTest-coroutines",
    "unitTest-turbine",
]
androidTest = [
    "unitTest-kotest-assertions",
    "androidTest-runner",
    "androidTest-hilt",
    "androidTest-compose",
]
